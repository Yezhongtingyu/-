#include<iostream>
#include<string>
#include<cstdio>
#include<cmath>
using namespace std;
/*
问题描述
对于一个数n，如果是偶数，就把n砍掉一半；如果是奇数，把n变成 3*n+ 1后砍掉一半，
直到该数变为1为止。     请计算需要经过几步才能将n变到1，具体可见样例。
输入 测试包含多个用例，每个用例包含一个整数n,当n为0 时表示输入结束。（1<=n<=10000）
输出 对于每组测试用例请输出一个数，表示需要经过的步数,每组输出占一行。
样例输入
3
1
0
样例输出
5
0
解题思路
王道并未关注 直接 / 2后 会不会 影响 数值，奇偶性不变。
*/
int main(){
    int n ;
    while(cin >> n){
        if(n == 0){
            break;
        }
        int step = 0;
        while(n != 1){
            if(n % 2 == 0){
                n = n / 2;
            }else{
                n = (3 * n + 1) / 2;
            }
            step++;

        }
        cout << step << endl;
    }



    return  0;
}
