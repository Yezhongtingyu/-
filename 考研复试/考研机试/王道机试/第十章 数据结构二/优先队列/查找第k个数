#include<iostream>
#include<string>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<unordered_map>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<cctype>
using namespace std;
/*
问题描述
查找一个数组的第K小的数，注意同样大小算一样大。 
如  2 1 3 4 5 2 第三小数为3。
输入描述
输入有多组数据。
每组输入n，然后输入n个整数(1<=n<=1000)，再输入k。
输出描述
输出第k小的整数。
样例输入
6
2 1 3 5 2 2
3
样例输出
3
解题思路
优先队列默认大顶堆
哈夫曼需要重定义为小顶堆，重定义优先队列
priority_queue<typename, vector<typename>, greater<typename> > name
题目中要求的乘法，在while循环的次数中通过累加完成了。
*/
int main(){
    int n;
    while(scanf("%d",&n)!=EOF){
        priority_queue<int, vector<int>, greater<int>> Q;
        int tmp;
        for(int i=0;i<n;i++){
            scanf("%d", &tmp);
            Q.push(tmp);
        }
        int k;
        scanf("%d", &k);
        tmp = Q.top();
        Q.pop();
        for(int i=2;i<=k;i++){
            while(tmp==Q.top())
                Q.pop();
            tmp = Q.top();
            Q.pop();
        }
        printf("%d\n", tmp);
    }
}
