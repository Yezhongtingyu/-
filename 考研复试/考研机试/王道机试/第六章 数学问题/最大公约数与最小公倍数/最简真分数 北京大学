#include<iostream>
#include<string>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<unordered_map>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<cctype>
using namespace std;
/*
问题描述
给出n个正整数，任取两个数分别作为分子和分母组成最简真分数，编程求共有几个这样的组合。
输入描述
每组包含n（n<=600）和n个不同的整数，整数大于1且小于等于1000。
输出描述
每行输出最简真分数组合的个数。
样例输入
7
3 5 7 9 11 13 15
3
2 4 5
0
样例输出
17
2
解题思路
a，b的最小公倍数是两数的乘积除以他们的最大公倍数
*/
int GCD(int a, int b){//欧几里得算法求最大公约数
    if(b == 0){
        return a;
    } else {
        return GCD(b , a % b);
    }
}

#define  N  1000
int main()
{
    int buf[N];
    int count, n;
    while(scanf("%d", &n)!=EOF)
    {
        for(int i=0; i<n; i++)
        {
            scanf("%d", &buf[i]);
        }
        count=0;//总计0个真分数
        for(int i=0; i<n; i++)//分母
        {
            for(int j=0; j<n; j++)//分子
            {
                if(i==j) continue;
                else if(buf[i]>buf[j] && GCD(buf[i], buf[j])==1) // 二者只有1这个公约数
                {
                    count++;
                }
            }
        }
        printf("%d\n", count);
    }
    return 0;
}
