#include<iostream>
#include<string>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<unordered_map>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<cctype>
using namespace std;
/*
问题描述
找奶牛
输入描述
两个点 NandK
输出描述
多久能抓住，三种位移法，前后1 and *2
样例输入
5 17
样例输出
4
解题思路
线性宽度优先搜索
*/
const int MAXN = 100001;

struct Status {
    int n, t;
    Status (int n, int t) : n(n), t(t) {}
};

bool visit[MAXN];

int BFS(int n, int k){
    queue<Status> myQueue;
    myQueue.push(Status(n, 0));
    visit[n] = true;
    while(!myQueue.empty()){
        Status current = myQueue.front();
        myQueue.pop();
        if(current.n == k){
            return current.t;
        }
        for(int i = 0; i < 3; ++i){
            Status next(current.n, current.t + 1);
            if(i == 0){
                next.n += 1;
            } else if(i == 1){
                next.n -= 1;
            } else {
                next.n *= 2;
            }
            if(next.n < 0 || next.n >= MAXN || visit[next.n]){
                continue;
            }
            myQueue.push(next);
            visit[next.n] = true;
        }
    }
}

int main(){
    int n, k;
    cin >> n >> k;
    memset(visit, false, sizeof(visit));
    cout << BFS(n, k) << endl;
    return 0;
}
