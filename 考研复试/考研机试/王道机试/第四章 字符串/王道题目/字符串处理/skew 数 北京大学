#include<iostream>
#include<string>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<unordered_map>
#include<string>
using namespace std;
/*
问题描述
在 skew binary 表示中，第 k 位的值 x[k] 表示 x[k]×(2^(k+1)-1)。
每个位上的可能数字是 0 或 1，最后面一个非零位可以是 2，
例如，10120(skew) = 1×(2^5-1) + 0×(2^4-1) + 1×(2^3-1) + 2×(2^2-1) + 0×(2^1-1) = 31 + 0 + 7 + 6 + 0 = 44。
前十个 skew 数是 0、1、2、10、11、12、20、100、101、以及 102。
输入描述
输入包括多组数据，每组数据包含一个 skew 数。
输出描述
对应每一组数据，输出相应的十进制形式。结果不超过 2^31-1。
样例输入
10120
200000000000000000000000000000
10
1000000000000000000000000000000
11
100
11111000001110000101101102000
样例输出
44
2147483646
3
2147483647
4
7
1041110737
解题思路

*/
#include<iostream>
using namespace std;

int main(){
    string s;
    while(cin>>s){
        int sum = 0;
        for(int i = s.length()-1,j = 0;i >=0;i--,j++){
            sum += (s[i]-'0')*(pow(2,j+1)-1);
        }
        cout<<sum<<endl;
    }
    return 0;
}
/*更艹的

int main() {
    string s;
    while(cin>>s) {
        int size = s.size(), res=0;
        for(int i=0; i<size; ++i)
            res += (s[i]-'0')*((1 << (size-i))-1);
        cout<<res<<endl;
    }
    
}
*/ 
