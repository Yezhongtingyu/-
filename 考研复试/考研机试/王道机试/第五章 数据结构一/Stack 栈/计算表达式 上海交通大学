#include<iostream>
#include<string>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<unordered_map>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<cctype>
using namespace std;
/*
问题描述
对于一个不存在括号的表达式进行计算
输入描述
存在多种数据，每组数据一行，表达式不存在空格
输出描述

样例输入
6/2+3+3*4
样例输出
18
解题思路

*/


int Priority(char c){
    if(c == '#'){
        return 0;
    } else if(c == '$'){
        return 1;
    } else if(c == '+' || c == '-'){
        return 2;
    } else {
        return 3;
    }
}

double GetNumber(string str, int& index){  //获得下个数字
    double number = 0;
    while(isdigit(str[index])){
        number = number * 10 + str[index] - '0';
        index++;
    }
    return number;
}

double Calculate(double x, double y, char op){
    double result = 0;
    if(op == '+'){
        result = x + y;
    } else if(op == '-'){
        result = x - y;
    } else if(op == '*'){
        result = x * y;
    } else if(op == '/'){
        result = x / y;
    }
    return result;
}

int main(){
    string str;
    while(getline(cin, str)){
        if(str == "0"){
            break;
        }
        int index = 0;
        stack<double> oper;
        stack<double> data;
        str += '$';
        oper.push('#');
        while(index < str.size()){
            if(str[index] == ' '){
                index++;
            }else if(isdigit(str[index])){
                data.push(GetNumber(str, index));
            }else{
                if(Priority(oper.top()) < Priority(str[index])){
                    oper.push(str[index]);
                    index++;
                } else {
                    double y = data.top();
                    data.pop();
                    double x = data.top();
                    data.pop();
                    data.push(Calculate(x, y, oper.top()));
                    oper.pop();
                }
            }
        }
        printf("%d\n", int (data.top()));
    }
    return 0;
}
